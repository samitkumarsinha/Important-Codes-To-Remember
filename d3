
//transition in d3
svg: any;
  container: any;
  counter = 5;
  
  ngOnInit(): void {
    this.draw();
  }
  draw(){

    this.svg = d3
      .select('#chart')
      .append('svg')
      .attr('width', 500)
      .attr('height', 500)
      .style('background-color', 'burlywood');


    this.svg
      .append('ellipse')
      .attr('cx', 250)
      .attr('cy', 250)
      .attr('rx', 100)
      .attr('ry', 80)
      .append('text');
    this.svg
      .append('text')
      .attr('x', this.counter)
      .attr('y', 250)
      .style('stroke', '#ffffff')
      .text('hello');

  }
move(){
    this.svg.transition().delay(500).duration(1000).attr('width','2000'); //div transition
  }
    move(){
    this.svg.selectAll('text').transition().delay(500).duration(10000).attr('x','500'); // text transition
  }
  //------------------------------
  
<div id="chart"></div>
<button (click)="move()">click</button>
//------------------------------------
select a text by class

  this.svg
      .append('text')
      .attr('class','txt')
      .attr('x', this.counter)
  //------------------------------
    move(){
    this.svg.select('.txt').transition().delay(500).duration(10000).attr('x','500');
  }
  //------------------------------- continous transition
  <button (click)="starttrans()">click</button>

  starttrans(){
    setInterval(()=>{
      this.move()
    },1000)
  }
  move(){
    this.svg.select('.txt').transition().duration(1000).attr('x','400');
    this.svg.select('.txt').attr('x','250');
  }
//---------------------------------rotate
  move(){
    this.svg.select('.txt').transition().duration(2000).attr('rotate',360);
    this.svg.select('.txt').attr('rotate','0');
  }
//-------------------random
 move(){
    this.svg.select('.txt').transition().duration(2000).attr('y',Math.random()*500).attr('x',Math.random()*500);
  }
//-------------------------bar chart 
import { Component, OnInit } from '@angular/core';
import * as d3 from 'd3';
@Component({
  selector: 'app-chart1',
  templateUrl: './chart1.component.html',
  styleUrls: ['./chart1.component.scss']
})
export class Chart1Component implements OnInit {
  svg: any;
  mygroup: any;
  constructor() { }

  ngOnInit(): void {
    this.svg = d3.select('body').append('svg');
    this.svg
      .attr('width', 400)
      .attr('height', 400)
      .style('background-color', 'white');
    this.draw();
  }

  draw(){
    const dataset = [10, 5, 12, 15, 90];
    this.svg
    .selectAll("div")
    .data(dataset)  
    .enter()
    .append("rect")
    .attr("class", "bar")
    .attr('x', 20)
    .attr('y', (d: any, i: any)=> i*50)
    .style('height', 20)
    .style("width", (d: any) =>{
        let barHeight = d * 5;
        console.log(barHeight)
        return barHeight + "px";
    });
  }
}
//----------------------------------------------------
draw pie

export class TestComponent implements OnInit {
  svg: any;
  dataset = [
    5, 10, 19, 21, 25
  ];
  constructor() {}

  ngOnInit(): void {
    this.svg = d3.select('#chart').append('svg');
    this.svg
      .attr('width', 400)
      .attr('height', 400)
      .style('background-color', 'wheat');

    this.draw();
  }
  draw() {
    this.svg
      .style('stroke', 'white')
      .style('stroke-width', 0.5)

    let pie = d3.pie();
    let arc = d3.arc().innerRadius(0).outerRadius(200);

    var arcs = this.svg
      .selectAll('arc')
      .data(pie(this.dataset))
      .enter()
      .append('g')
      .attr('class', 'arc');
    var color = d3.scaleOrdinal([
      '#4daf4a',
      '#377eb8',
      '#ff7f00',
      '#984ea3',
      '#e41a1c',
    ]);
    //Draw arc paths
    arcs
      .append('path')
      .attr('fill', function (d: any, i: any) {
        return color(i);
      })
      .attr('d', arc)
      .attr('transform','translate(200,200)');
  }
}
---------------------------------------------------------
