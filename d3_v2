axis
-------
export class Test3Component implements OnInit {
  svg: any;
  constructor() { }

  ngOnInit(): void {
    this.svg = d3.select("#chart").append("svg");
    this.svg
      .attr('width', 500)
      .attr('height', 500)
      .style('background-color','wheat')
      .style('overflow','visible')
      .style('margin','0 0 0 40px')

    let scalex = d3.scaleLinear().range([0,500]).domain([0,500])
    let scaley = d3.scaleLinear().range([500,0]).domain([0,500])

    let xaxis = d3.axisBottom(scalex).ticks(5);
    let yaxis = d3.axisLeft(scaley).ticks(5);

    this.svg
      .append('g')
      .attr('transform','translate(0,500)')
      .call(xaxis)
    this.svg
      .append('g')
      .call(yaxis)
      
    this.svg
      .append('g')
      .append('line')
      .style('stroke','green')
      .attr('x1',0)
      .attr('y1',500)
      .attr('x2',200)
      .attr('y2',500-100)
  }
 ----------------
export class Test2Component implements OnInit {
  svg:any;
  constructor() { }

  ngOnInit(): void {
    this.svg = d3.select('#chart').append('svg');
    this.svg
      .attr('width', 400)
      .attr('height', 400)
      .style('margin-left',20)
      .style('overflow','visible')
      .style('background-color','white');


    let xscale = d3.scaleLinear().range([0,400]).domain([0,400]);
    let xaxis = d3.axisBottom(xscale).ticks(5);
    let yscale = d3.scaleLinear().range([400,0]).domain([0,400]);
    let yaxis = d3.axisLeft(yscale).ticks(5);
    this.svg
      .append('g')
      .attr('transform','translate(0,400)')
      .call(xaxis);

    this.svg
      .append('g')
      .call(yaxis);

    this.svg
      .append('g')
      .attr('transform','translate(0,400)')
      .append('line')
      .attr('stroke','black')
      .attr('x1',0)
      .attr('y1',0)
      .attr('x2',200)
      .attr('y2',-200)

  }
  ------------------------------
  date format and date in axis from data
  
    data = [
    { date: '1-May-12', close: '58.13' },
    { date: '30-Apr-12', close: '53.98' },
    { date: '27-Apr-12', close: '67.00' },
    { date: '26-Apr-12', close: '89.70' },
    { date: '25-Apr-12', close: '99.00' },
  ];
  
    let xscale = d3.scaleTime().range([0, 400]).domain(<[Date, Date]>d3.extent(this.data, (d: any) => new Date(d.date) ));
    let xaxis = d3.axisBottom(xscale).tickFormat(<any>d3.timeFormat("%Y-%m-%d")).ticks(5);
    let yscale = d3.scaleLinear().range([this.data.length, 0]).domain([0, 400]);
    let yaxis = d3.axisLeft(yscale).ticks(5);
    this.svg.append('g').attr('transform', 'translate(0,400)').call(xaxis);

    this.svg.append('g').call(yaxis);
    -----------------------------
    set axis at origin
    export class Test3Component implements OnInit {
  svg: any;
  dataset = [
    [1, 1],
    [12, 20],
    [24, 36],
    [32, 50],
    [40, 70],
    [50, 100],
    [55, 106],
    [65, 123],
    [73, 130],
    [78, 134],
    [83, 136],
    [89, 138],
    [100, 140],
  ];

  constructor() {}

  ngOnInit(): void {
    let width = 400;
    let height = 400;

    this.svg = d3.select('#chart').append('svg');
    this.svg
      .attr('width', width)
      .attr('height', height)
      .style('overflow', 'visible');
    let xScale = d3.scaleLinear().domain([0, 100]).range([0, width]);
    let yScale = d3.scaleLinear().domain([0, 200]).range([height, 0]);
    let xaxis = d3.axisBottom(xScale);
    let yaxis = d3.axisLeft(yScale);

    let g = this.svg
      .append('g')
      .attr('transform', 'translate(' + 104 + ',' + 98 + ')');

    g.append('g')
      .attr('transform', 'translate(0,' + height + ')')
      .call(xaxis);

    g.append('g').call(yaxis);

    let line = d3
      .line()
      .x((d: any) => xScale(d[0]))
      .y((d: any) => yScale(d[1]))
      .curve(d3.curveMonotoneX);

    this.svg
      .append('path')
      .datum(this.dataset)
      .attr('class', 'line')
      .attr('transform', 'translate(' + 100 + ',' + 100 + ')')
      .attr('d', line)
      .style('fill', 'none')
      .style('stroke', '#CC0000')
      .style('stroke-width', '2');
  }
  ---------------------------
