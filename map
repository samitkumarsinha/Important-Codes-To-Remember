Angular extract specific fields from json in service
 customlist(): Observable<CustomUser[]>{
    return this.http.get<User[]>(`${this.url}/api/list`).pipe(
       map((obj:User[]) => {
          let result = obj.map((data: CustomUser) => {
            return ({'username': data.username, 'password': data.password})
          })
          return result;
       })
    )
  }
  //--------in short
  map((obj:User[]) => {
    return obj.map(data => ({'username': data.username, 'password': data.password})) 
  })
  //--------depth one level et company from https://jsonplaceholder.typicode.com/users
  companydata(): Observable<MyList[]>{
    return this.http.get<any>('https://jsonplaceholder.typicode.com/users').pipe(
      map((obj:any)=>{
        console.log(obj)
        return obj.map(
          (data1:any) => {
            let mydata:MyList = data1.company;
            return ({'name': mydata.name,'catchPhrase': mydata.catchPhrase, 'bs': mydata.bs})
          }
        )
      })
    )}
-----------------------------------------------------------------------------
SwitchMap: get data from two sources
  getUser(): Observable<User>{
    return this.http.get<any>(`${this.baseUrl}/users`);
  }
  getDetails(): Observable<any> {
    return this.http.get<any>(`${this.baseUrl}/unknown`).pipe(
      switchMap((val) => this.getUser().pipe(
        map(data => [val, data])
      )
      )
    );
  }
  //-----------------fetch---------------------------------------------------
   getDetails(){
    this.ds.getDetails().subscribe(data => {
      console.log(data[0].data, data[1].data);
    })
  }
  -----------------------------------------------------------------------------
