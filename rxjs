mouse event
ngAfterViewInit(): void {
    fromEvent(document.body, 'click')
      .pipe(
        debounceTime(10),
        map((item: any) => {
          return { x: item.clientX, y: item.clientY };
        })
      )
      .subscribe((c) => {
        console.log(c);
      });
  }
  --------------------------------------------
  map two arrays
   getData() {
    let bear = [{name: 'aa', age:20}, {name: 'bb', age:20}, {name: 'cc', age:20}, {name: 'dd', age:20}]
    let lion = [{name: 'ee', age:20}, {name: 'ff', age:20}, {name: 'gg', age:20}]
    let list3 = of(bear)
    let list4 = of(lion)
    return combineLatest([list3, list4]).pipe(
      map(([bears, lions]) => {
        return bears.map((tag, index) => {
          return 'bear called ' + tag.name + ' lion called ' + (lions[index]?.name)
        })
      })
    )
    -----------------------------------------------
    extract inner observables
 let list5 = of(1, 2, 3);
    let list6 = of(1, 2);
    return list5.pipe(
      switchMap((item) => {
        return list6.pipe(map((innerValue) => item * innerValue));
      })
    );
